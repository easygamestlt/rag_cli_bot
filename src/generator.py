"""–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ —á–µ—Ä–µ–∑ Ollama: —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–∞, –æ—á–∏—Å—Ç–∫–∞ –≤—ã–≤–æ–¥–∞ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ."""

from typing import List, Tuple, Dict
import ollama
from .config import GEN_MODEL, TOP_K
from .utils import clean_model_output, enforce_three_sentences, linkify_refs

SYSTEM_PROMPT = (
    "–¢—ã ‚Äî –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –¥–∞–Ω–Ω—ã–º. –û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ, –Ω–∞ —Ä—É—Å—Å–∫–æ–º. "
    "–ò—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ —Ñ–∞–∫—Ç—ã –∏–∑ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞. –ï—Å–ª–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –æ—Ç–≤–µ—Ç–∞, —á–µ—Å—Ç–Ω–æ —Å–∫–∞–∂–∏ –æ–± —ç—Ç–æ–º."
)

def format_context_for_prompt(retrieved: List[Tuple[float, object]]) -> str:
    """
    –§–æ—Ä–º–∏—Ä—É–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø—Ä–æ—Å—Ç–∞–≤–ª—è—è –Ω–æ–º–µ—Ä–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ [n] –ø–µ—Ä–µ–¥ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞–º–∏.

    Args:
        retrieved: —Å–ø–∏—Å–æ–∫ (score, ChunkMeta)

    Returns:
        –¢–µ–∫—Å—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ (—Å—Ç—Ä–æ–∫–∞).
    """
    lines = []
    # –°–æ–±–µ—Ä—ë–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ URL –∏ –Ω—É–º–µ—Ä–∞—Ü–∏—é –≤–Ω–µ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ (–≤ generate_answer)
    for score, ch in retrieved:
        lines.append(f"[source: {ch.url}#chunk-{ch.chunk_id}]\n{ch.text}\n")
    return "\n\n".join(lines)[:6000]

def generate_answer(question: str, retrieved: List[Tuple[float, object]]) -> str:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å –∏—Å–ø–æ–ª—å–∑—É—è retrieved —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç HTML-ready —Å—Ç—Ä–æ–∫—É (—Å –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–º–∏ [n]) ‚Äî –≥–æ—Ç–æ–≤—É—é –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram parse_mode="HTML".

    Args:
        question: –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        retrieved: —Å–ø–∏—Å–æ–∫ (score, ChunkMeta)

    Returns:
        HTML —Å—Ç—Ä–æ–∫–∞ –æ—Ç–≤–µ—Ç–∞.
    """
    # –°–æ–±–∏—Ä–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ URL -> –∏–Ω–¥–µ–∫—Å—ã
    urls = []
    seen = set()
    for _, ch in retrieved:
        if ch.url not in seen:
            seen.add(ch.url)
            urls.append(ch.url)
    index_of = {u: i+1 for i, u in enumerate(urls)}
    url_by_index = {i+1: u for i, u in enumerate(urls)}

    # –ö–æ–Ω—Ç–µ–∫—Å—Ç (—Å –Ω–æ–º–µ—Ä–∞–º–∏) –¥–ª—è –ø—Ä–æ–º–ø—Ç–∞
    ctx_lines = []
    for score, ch in retrieved:
        n = index_of[ch.url]
        ctx_lines.append(f"[{n}] {ch.text}\n")
    context = "\n".join(ctx_lines)[:6000]

    # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞
    user_prompt =  (
        f"""
        –¢—ã –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ–¥–∞–≤–µ—Ü-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –∫–æ–º–ø–∞–Ω–∏–∏. –û—Ç–≤–µ—á–∞–π –¢–û–õ–¨–ö–û –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞. 
        –ï—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ‚Äì –≤–µ–∂–ª–∏–≤–æ –æ—Ç–∫–∞–∂–∏—Å—å –æ—Ç–≤–µ—á–∞—Ç—å. –°–æ—Ö—Ä–∞–Ω—è–π –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∏ —É–≤–µ—Ä–µ–Ω–Ω—ã–π —Ç–æ–Ω.

        **–†–æ–ª—å:**
        - –≠–∫—Å–ø–µ—Ä—Ç –ø–æ –ø—Ä–æ–¥—É–∫—Ç–∞–º/—É—Å–ª—É–≥–∞–º –∫–æ–º–ø–∞–Ω–∏–∏
        - –ú–∞—Å—Ç–µ—Ä –≤–µ–∂–ª–∏–≤–æ–≥–æ –æ–±—â–µ–Ω–∏—è
        - –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ —Ä–µ—à–µ–Ω–∏—é –ø—Ä–æ–±–ª–µ–º –∫–ª–∏–µ–Ω—Ç–æ–≤

        **–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:**
        1. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏–∑ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π:(—Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã, –∫–∞–∂–¥—ã–π –ø—Ä–æ–Ω—É–º–µ—Ä–æ–≤–∞–Ω –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–π —Å—Å—ã–ª–∫–æ–π) <CONTEXT_START>{context}<CONTEXT_END>
        2. –û—Ç–≤–µ—á–∞–π –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –Ω–∞ –≤–æ–ø—Ä–æ—Å: {question}
        3. –ï—Å–ª–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç –æ—Ç–≤–µ—Ç–∞: "–ò–∑–≤–∏–Ω–∏—Ç–µ, —ç—Ç–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –£—Ç–æ—á–Ω–∏—Ç–µ –¥–µ—Ç–∞–ª–∏ —É –º–µ–Ω–µ–¥–∂–µ—Ä–∞"
        4. –î–ª—è —Å–ª–æ–∂–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ —Ä–∞–∑–±–∏–≤–∞–π –æ—Ç–≤–µ—Ç –Ω–∞ –ø—É–Ω–∫—Ç—ã
        5. –ò–∑–±–µ–≥–∞–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –∂–∞—Ä–≥–æ–Ω–∞
        6. –°—Ç–∞–≤—å —á–∏—Å–ª–æ–≤—ã–µ —Å—Å—ã–ª–∫–∏ [n] —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–π, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –æ–ø–æ—Ä–∞ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–º —Ñ—Ä–∞–≥–º–µ–Ω—Ç–µ
        7. –ù–µ –ø—Ä–∏–¥—É–º—ã–≤–∞–π –Ω–æ–≤—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –∏ –Ω–µ –º–µ–Ω—è–π –Ω–æ–º–µ—Ä–∞ 

        **–°—Ç–∏–ª—å –æ—Ç–≤–µ—Ç–∞:**
        - –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∂–∏ –¥–ª—è —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –æ–∫—Ä–∞—Å–∫–∏ (1-2 –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏)
        - –ü–æ–¥—á–µ—Ä–∫–∏–≤–∞–π –≤—ã–≥–æ–¥—ã –∫–ª–∏–µ–Ω—Ç–∞
        - –ü—Ä–µ–¥–ª–∞–≥–∞–π –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã: "–í–æ–∑–º–æ–∂–Ω–æ –≤–∞—Å —Ç–∞–∫–∂–µ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç..."
        - –ó–∞–≤–µ—Ä—à–∞–π –≤–æ–ø—Ä–æ—Å–æ–º: "–•–æ—Ç–∏—Ç–µ —É—Ç–æ—á–Ω–∏—Ç—å –∫–∞–∫–∏–µ-—Ç–æ –¥–µ—Ç–∞–ª–∏?"

        **–ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞:**
        "–î–æ–±—Ä—ã–π –¥–µ–Ω—å! <–æ—Å–Ω–æ–≤–Ω–æ–π –æ—Ç–≤–µ—Ç –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞>. 
        –ù—É–∂–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏? üòä"

        **–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—á–∞–Ω–∏—è:**
        - –ö–æ–Ω—Ç–µ–∫—Å—Ç –æ–±—Ä–µ–∑–∞–Ω –¥–æ 512 —Ç–æ–∫–µ–Ω–æ–≤
        - –ò–∑–±–µ–≥–∞–π markdown-—Ä–∞–∑–º–µ—Ç–∫–∏
        - –û—Ç–≤–µ—Ç –¥–µ—Ä–∂–∏ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö 3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
        """
    )

    resp = ollama.chat(
        model=GEN_MODEL,
        messages=[
            {"role": "system", "content": SYSTEM_PROMPT},
            {"role": "user", "content": user_prompt},
        ],
        options={"temperature": 0.2},
    )

    text = resp["message"]["content"]
    text = clean_model_output(text)
    html_ready = linkify_refs(text, url_by_index)
    return html_ready
